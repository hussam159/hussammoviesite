{"ast":null,"code":"import _toConsumableArray from \"/Users/hussam/SFDS project/react-movies-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar API_KEY = '058870725be2093ac363f07f36672e0d'; // export function searchMovie(title, page) {\n//   let API_URL = `https://api.themoviedb.org/3/search/tv?api_key=${API_KEY}&append_to_response=releases`\n//   console.log(API_URL);\n//   return new Promise((resolve, reject) => {\n//     fetch(`${API_URL}&query=${encodeURI(title)}&page=${page}`)\n//       .then(res => res.json())\n//       .then(json => {\n//         resolve(json)\n//       })\n//       .catch(err => {\n//         reject(err)\n//       })\n//   })\n// }\n\nexport function getGenresByID(ids) {\n  var genres = [{\n    id: 10759,\n    name: \"Action & Adventure\"\n  }, {\n    id: 16,\n    name: \"Animation\"\n  }, {\n    id: 35,\n    name: \"Comedy\"\n  }, {\n    id: 80,\n    name: \"Crime\"\n  }, {\n    id: 99,\n    name: \"Documentary\"\n  }, {\n    id: 18,\n    name: \"Drama\"\n  }, {\n    id: 10751,\n    name: \"Family\"\n  }, {\n    id: 10762,\n    name: \"Kids\"\n  }, {\n    id: 9648,\n    name: \"Mystery\"\n  }, {\n    id: 10763,\n    name: \"News\"\n  }, {\n    id: 10764,\n    name: \"Reality\"\n  }, {\n    id: 10765,\n    name: \"Sci-Fi & Fantasy\"\n  }, {\n    id: 10766,\n    name: \"Soap\"\n  }, {\n    id: 10767,\n    name: \"Talk\"\n  }, {\n    id: 10768,\n    name: \"War & Politics\"\n  }, {\n    id: 37,\n    name: \"Western\"\n  }];\n  var data = [];\n  ids.forEach(function (id) {\n    var genre = genres.find(function (g) {\n      return id === g.id;\n    });\n    console.log(genre);\n    data = [].concat(_toConsumableArray(data), [genre]);\n  });\n  return data;\n}\nexport function getPopular(page) {\n  return new Promise(function (resolve, reject) {\n    fetch(\"https://api.themoviedb.org/3/tv/popular?api_key=\".concat(API_KEY, \"&language=en-US&page=\").concat(page)).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n}\nexport function getDetailedseries(movieID) {\n  console.log(movieID);\n  return new Promise(function (resolve, reject) {\n    fetch(\"https://api.themoviedb.org/3/tv/\".concat(movieID, \"?api_key=\").concat(API_KEY)).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      resolve(json);\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/hussam/SFDS project/react-movies-master/src/services/seriesService.js"],"names":["API_KEY","getGenresByID","ids","genres","id","name","data","forEach","genre","find","g","console","log","getPopular","page","Promise","resolve","reject","fetch","then","res","json","catch","err","getDetailedseries","movieID"],"mappings":"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","sourcesContent":["const API_KEY = '058870725be2093ac363f07f36672e0d'\n// export function searchMovie(title, page) {\n//   let API_URL = `https://api.themoviedb.org/3/search/tv?api_key=${API_KEY}&append_to_response=releases`\n//   console.log(API_URL);\n//   return new Promise((resolve, reject) => {\n//     fetch(`${API_URL}&query=${encodeURI(title)}&page=${page}`)\n//       .then(res => res.json())\n//       .then(json => {\n//         resolve(json)\n//       })\n//       .catch(err => {\n//         reject(err)\n//       })\n//   })\n// }\n\nexport function getGenresByID(ids) {\n  const genres = [\n       {\n            id: 10759,\n            name: \"Action & Adventure\"\n        },\n        {\n            id: 16,\n            name: \"Animation\"\n        },\n        {\n            id: 35,\n            name: \"Comedy\"\n        },\n        {\n            id: 80,\n            name: \"Crime\"\n        },\n        {\n            id: 99,\n            name: \"Documentary\"\n        },\n        {\n            id: 18,\n            name: \"Drama\"\n        },\n        {\n            id: 10751,\n            name: \"Family\"\n        },\n        {\n            id: 10762,\n            name: \"Kids\"\n        },\n        {\n            id: 9648,\n            name: \"Mystery\"\n        },\n        {\n            id: 10763,\n              name: \"News\"\n        },\n        {\n            id: 10764,\n            name: \"Reality\"\n        },\n        {\n            id: 10765,\n            name: \"Sci-Fi & Fantasy\"\n        },\n        {\n            id: 10766,\n            name: \"Soap\"\n        },\n        {\n            id: 10767,\n            name: \"Talk\"\n        },\n        {\n            id: 10768,\n            name: \"War & Politics\"\n        },\n        {\n            id: 37,\n            name: \"Western\"\n        }\n  ]\n  let data = []\n  ids.forEach(id => {\n    let genre = genres.find(g => id === g.id)\n    console.log(genre)\n    data = [...data, genre]\n  })\n  return data\n}\n\nexport function getPopular(page) {\n  return new Promise((resolve, reject) => {\n    fetch(\n      `https://api.themoviedb.org/3/tv/popular?api_key=${API_KEY}&language=en-US&page=${page}`\n    )\n      .then(res => res.json())\n      .then(json => {\n        resolve(json)\n      })\n      .catch(err => {\n        reject(err)\n      })\n  })\n}\n\n\nexport function getDetailedseries(movieID) {\n  console.log(movieID);\n  return new Promise((resolve, reject) => {\n    fetch(`https://api.themoviedb.org/3/tv/${movieID}?api_key=${API_KEY}`)\n      .then(res => res.json())\n      .then(json => {\n        resolve(json)\n      })\n      .catch(err => {\n        reject(err)\n      })\n  })\n}\n"]},"metadata":{},"sourceType":"module"}